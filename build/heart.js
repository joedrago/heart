// Generated by CoffeeScript 2.5.1
(function() {
  var Discord, discordClient, discordConfig, discordGuild, discordID, fatalError, fs, main, onInputEvent, onTick, readline, send;

  fs = require('fs');

  Discord = require('discord.js');

  readline = require('readline');

  discordID = null;

  discordConfig = null;

  discordClient = null;

  discordGuild = null;

  fatalError = function(reason) {
    console.error(`FATAL [heart]: ${reason}`);
    return process.exit(1);
  };

  send = function(channelName, text) {
    var channel;
    channel = discordClient.channels.cache.find(function(c) {
      return c.name === channelName;
    });
    if (channel != null) {
      channel.send(text);
    }
  };

  onTick = function() {
    var ev;
    ev = {
      type: 'tick'
    };
    return console.log(JSON.stringify(ev));
  };

  onInputEvent = function(ev) {
    var delay;
    switch (ev.type) {
      case 'msg':
        if ((ev.chan != null) && (ev.text != null) && (ev.delay != null)) {
          delay = parseInt(ev.delay);
          setTimeout(function() {
            return send(ev.chan, ev.text);
          }, delay);
        }
        break;
      default:
        console.error(`Unknown event type: ${ev.type}`);
    }
  };

  main = function() {
    var rl;
    if (!fs.existsSync("heart.json")) {
      fatalError("Can't find heart.json");
    }
    discordConfig = JSON.parse(fs.readFileSync("heart.json", "utf8"));
    discordClient = new Discord.Client();
    discordClient.on('ready', function() {
      console.log(JSON.stringify({
        type: 'login',
        tag: discordClient.user.tag
      }));
      return discordClient.guilds.fetch(discordConfig.guild).then(function(guild) {
        return discordGuild = guild;
      });
    });
    discordClient.on('message', function(msg) {
      if (discordGuild === null) {
        return;
      }
      return discordGuild.members.fetch(msg).then(function(user) {
        var ev;
        if (user.id === discordClient.user.id) {
          return;
        }
        // Don't respond to yourself
        ev = {
          type: 'msg',
          chan: msg.channel.name,
          user: user.nickname,
          text: msg.content
        };
        return console.log(JSON.stringify(ev));
      });
    });
    setInterval(onTick, 60 * 1000);
    rl = readline.createInterface({
      input: process.stdin,
      output: process.stderr
    });
    rl.on('line', function(rawJSON) {
      var ev;
      ev = null;
      try {
        ev = JSON.parse(rawJSON);
      } catch (error) {
        console.error(`Ignoring invalid JSON: ${rawJSON}`);
        return;
      }
      return onInputEvent(ev);
    });
    return discordClient.login(discordConfig.secrets.discord);
  };

  module.exports = main;

}).call(this);
